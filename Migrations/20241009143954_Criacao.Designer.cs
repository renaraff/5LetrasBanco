// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _5LetrasBanco.Models;

#nullable disable

namespace _5LetrasBanco.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20241009143954_Criacao")]
    partial class Criacao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_5LetrasBanco.Models.Alunos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AlunoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlunoEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AlunoEmail");

                    b.Property<string>("AlunoEscolaridade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AlunoEscolaridade");

                    b.Property<string>("AlunoNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AlunoNome");

                    b.Property<string>("AlunoSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AlunoSenha");

                    b.HasKey("Id");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("_5LetrasBanco.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AvaliacaoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int?>("AlunosId")
                        .HasColumnType("int");

                    b.Property<string>("AvaliacaoDescricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AvaliacaoDescricao");

                    b.Property<int>("AvaliacaoEstrela")
                        .HasColumnType("int")
                        .HasColumnName("AvaliacaoEstrela");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlunosId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("_5LetrasBanco.Models.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ComentarioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int?>("AlunosId")
                        .HasColumnType("int");

                    b.Property<string>("ComentarioTexto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ComentarioTexto");

                    b.Property<int>("ConteudoId")
                        .HasColumnType("int");

                    b.Property<int>("DuvidaId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlunosId");

                    b.HasIndex("ConteudoId");

                    b.HasIndex("DuvidaId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("_5LetrasBanco.Models.Conteudo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ConteudoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConteudoTexto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ConteudoTexto");

                    b.Property<int>("MateriasId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MateriasId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Conteudo");
                });

            modelBuilder.Entity("_5LetrasBanco.Models.Duvida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DuvidaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int?>("AlunosId")
                        .HasColumnType("int");

                    b.Property<string>("DuvidaTexto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DuvidaTexto");

                    b.Property<int>("MateriasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlunosId");

                    b.HasIndex("MateriasId");

                    b.ToTable("Duvida");
                });

            modelBuilder.Entity("_5LetrasBanco.Models.Materias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MateriasId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MateriasNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MateriasNome");

                    b.HasKey("Id");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("_5LetrasBanco.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProfessorId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProfessorDescricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProfessorDescricao");

                    b.Property<string>("ProfessorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProfessorEmail");

                    b.Property<string>("ProfessorGraduacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProfessorGraduacao");

                    b.Property<string>("ProfessorNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProfessorNome");

                    b.Property<string>("ProfessorOcupacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProfessorOcupacao");

                    b.Property<string>("ProfessorSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProfessorSenha");

                    b.HasKey("Id");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("_5LetrasBanco.Models.Avaliacao", b =>
                {
                    b.HasOne("_5LetrasBanco.Models.Alunos", "Alunos")
                        .WithMany()
                        .HasForeignKey("AlunosId");

                    b.HasOne("_5LetrasBanco.Models.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alunos");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("_5LetrasBanco.Models.Comentario", b =>
                {
                    b.HasOne("_5LetrasBanco.Models.Alunos", "Alunos")
                        .WithMany()
                        .HasForeignKey("AlunosId");

                    b.HasOne("_5LetrasBanco.Models.Conteudo", "Conteudo")
                        .WithMany()
                        .HasForeignKey("ConteudoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5LetrasBanco.Models.Duvida", "Duvida")
                        .WithMany()
                        .HasForeignKey("DuvidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5LetrasBanco.Models.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alunos");

                    b.Navigation("Conteudo");

                    b.Navigation("Duvida");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("_5LetrasBanco.Models.Conteudo", b =>
                {
                    b.HasOne("_5LetrasBanco.Models.Materias", "Materias")
                        .WithMany()
                        .HasForeignKey("MateriasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5LetrasBanco.Models.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materias");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("_5LetrasBanco.Models.Duvida", b =>
                {
                    b.HasOne("_5LetrasBanco.Models.Alunos", "Alunos")
                        .WithMany()
                        .HasForeignKey("AlunosId");

                    b.HasOne("_5LetrasBanco.Models.Materias", "Materias")
                        .WithMany()
                        .HasForeignKey("MateriasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alunos");

                    b.Navigation("Materias");
                });
#pragma warning restore 612, 618
        }
    }
}
